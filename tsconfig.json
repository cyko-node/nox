{
  /*
   * Typesafety for JavaScript!
   */

  "compilerOptions": {
    "target": "esnext",
    "module": "esnext",
    "moduleResolution": "NodeNext", // depends on workspace ts setup .vsconfig
    "resolveJsonModule": true,      // requires moduleResolution: "nodeish"

    /*
     * Setup strict typechecking, without compiling.
     */

    "allowJs": true, // use .js files (aswell as .ts)
    "checkJs": true, // enable typecheck on .js files
    "noEmit":  true, // don't compile anything (just perform typechecks).
    "strict":  true, // enable strict typechecking.
    "strictNullChecks": true,  // enable null and undefined typechecking.
    "noImplicitAny":    false, // enable the any type as falback.

    /*
     * Files / Paths.
     */

    "outDir": "./code/lib", // where the code resides.

    // test
    //"types": [ "./lib/nox.d.ts"],
    //"rootDir": "./lib",
    //"paths": { "*":[ "./types/nox/*" ] },
    "typeRoots": [ "./code/types/", "./node_modules/@types/" ],

    //"paths": { "*": [ "./node_modules/*", "./lib/types/*" ]}
  },

  /*
   * File filtering.
   */

  "include": [ "./code/lib", "./code/types" ],
  "exclude": [ "./code/bak" ],
}
